---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "{{ .ClusterID }}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: AWSManagedCluster
    name: "{{ .ClusterID }}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: AWSManagedControlPlane
    name: "{{ .ClusterID }}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSManagedCluster
metadata:
  name: "{{ .ClusterID }}"
spec: {}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
kind: AWSManagedControlPlane
metadata:
  name: "{{ .ClusterID }}-control-plane"
spec:
  addons:
  - name: aws-ebs-csi-driver
    version: v1.14.0-eksbuild.1
  - conflictResolution: "overwrite"
    name: vpc-cni
    version: v1.12.0-eksbuild.2
  associateOIDCProvider: true
  logging:
    apiServer: true
    audit: true
    authenticator: true
    controllerManager: true
    scheduler: true
  network:
    vpc:
      availabilityZoneSelection: Ordered
      availabilityZoneUsageLimit: 3
  region: "{{ .Region }}"
  sshKeyName: "{{ .SSHKey }}"
  version: "{{ .K8SVersion }}"
  vpcCni:
    env:
    - name: ANNOTATE_POD_IP
      value: \"true\"
{{ range .WorkerNodes }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{ .Name }}"
spec:
  clusterName: "{{ $.ClusterID }}"
  replicas: {{ .Quantity }}
  selector:
    matchLabels:
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
          kind: EKSConfigTemplate
          name: "{{ .Name }}"
          namespace: capi-clusters
      clusterName: "{{ $.ClusterID }}"
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate
        name: "{{ .Name }}"
        namespace: capi-clusters
      version: "{{ $.K8SVersion }}"
      failureDomain: "{{ .AZ }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: "{{ .Name }}"
spec:
  template:
    spec:
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
      instanceType: "{{ .Size }}"
      sshKeyName: "{{ .SSHKey }}"
      {{- range .Disks }}
      rootVolume:
        size: {{ .Size }}
        type: {{ .Type }}
        encrypted: {{ .Encrypted }}
      {{ end }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
kind: EKSConfigTemplate
metadata:
  name: "{{ .Name }}"
spec:
  template: {}
{{ end }}
