---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: GCPCluster
    name: "{{ .ClusterID }}"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "{{ .ClusterID }}-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: GCPCluster
metadata:
  name: "{{ .ClusterID }}"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  project: {{ .Account }}
  region: "{{ .Region }}"
{{- if ne .Networks.VPCID "" }}
  network:
    name: {{ .Networks.VPCID }}
    {{- if ne .Networks.Subnets nil }}
    subnets:
    {{- range .Networks.Subnets }}
      - id: {{ .Name }}
    {{- end }}
    {{- end }}
{{- end }}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  replicas: {{- if .ControlPlane.HighlyAvailable }} 3 {{- else }} 1 {{- end }}
  machineTemplate:
    infrastructureRef:
      kind: GCPMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "{{ .ClusterID }}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: {{`\"{{ ds.meta_data.local_hostname.split(".")[0] }}\"`}}
        kubeletExtraArgs:
          cloud-provider: gce
    clusterConfiguration:
      apiServer:
        timeoutForControlPlane: 20m
        extraArgs:
          cloud-provider: gce
      controllerManager:
        extraArgs:
          cloud-provider: gce
          allocate-node-cidrs: "false"
          cloud-config: /etc/kubernetes/gce.conf
        extraVolumes:
          - hostPath: /etc/kubernetes/gce.conf
            mountPath: /etc/kubernetes/gce.conf
            name: gce-conf
            pathType: FileOrCreate
    files:
    - content: |
        [Global]
        multizone=true
      path: /etc/kubernetes/gce.conf
    joinConfiguration:
      nodeRegistration:
        name: {{`\"{{ ds.meta_data.local_hostname.split(".")[0] }}\"`}}
        kubeletExtraArgs:
          cloud-provider: gce
  version: "{{ $.K8SVersion }}"
---
kind: GCPMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{ .ClusterID }}-control-plane"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  template:
    spec:
      instanceType: "{{ .ControlPlane.Size }}"
      image: "{{ .ControlPlane.Image }}"
      {{- if ne .ControlPlane.RootVolume.Size "" }}
      rootDeviceSize: {{ .ControlPlane.RootVolume.Size }}
      {{- end }}
      {{- if ne .ControlPlane.RootVolume.Type "" }}
      rootDeviceType: {{ .ControlPlane.RootVolume.Type }}
      {{- end }}
{{- range $node := .WorkerNodes }}
{{- range $index, $n := loop .AZ .Quantity }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  annotations:
  {{- if ne $node.NodeGroupMaxSize "" }}
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: '{{ $node.NodeGroupMaxSize }}'
  {{- end }}
  {{- if ne $node.NodeGroupMinSize "" }}
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: '{{ $node.NodeGroupMinSize }}'
  {{- end }}
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  clusterName: "{{ .ClusterID }}"
  replicas: {{ $n.QA }}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{ .ClusterID }}"
      version: "{{ $.K8SVersion }}"
      failureDomain: "{{- if $node.AZ -}} {{ $n.AZ }} {{- else -}} {{ $.Region }}{{ $n.AZ }} {{- end }}"
      bootstrap:
        configRef:
          name: "{{ $node.Name }}-md-{{ $index }}"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{ $node.Name }}-md-{{ $index }}"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: GCPMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: GCPMachineTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  template:
    spec:
      instanceType: "{{ $node.Size }}"
      image: "{{ $node.Image }}"
      {{- if ne $node.RootVolume.Size ""}}
      rootDeviceSize: {{ $node.RootVolume.Size }}
      {{- end }}
      {{- if ne $node.RootVolume.Type "" }}
      rootDeviceType: {{ $node.RootVolume.Type }}
      {{- end }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{ $node.Name }}-md-{{ $index }}"
  namespace: "cluster-{{ .ClusterID }}"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: {{`\"{{ ds.meta_data.local_hostname.split(".")[0] }}\"`}}
          kubeletExtraArgs:
            cloud-provider: gce
{{- end }}
{{- end }}
