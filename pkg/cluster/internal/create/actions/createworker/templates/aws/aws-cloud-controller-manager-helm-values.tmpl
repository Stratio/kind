args:
- --v=2
- --cloud-provider=aws
- --cluster-cidr={{ $.PodsCidr }}
- --cluster-name={{ $.ClusterName }}
clusterRoleName: system:cloud-controller-manager
clusterRoleRules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
dnsPolicy: Default
env: []
extraVolumeMounts: []
extraVolumes: []
image:
  repository: {{ if $.Private }}{{ $.KeosRegUrl }}{{ else }}registry.k8s.io{{ end }}/provider-aws/cloud-controller-manager
  tag: v1.28.1
nameOverride: aws-cloud-controller-manager
namespace: kube-system
nodeSelector:
  node-role.kubernetes.io/control-plane: ""
podAnnotations: {}
podSecurityContext: {}
resources:
  requests:
    cpu: 200m
roleBindingName: cloud-controller-manager:apiserver-authentication-reader
roleName: extension-apiserver-authentication-reader
securityContext: {}
serviceAccountName: cloud-controller-manager
tolerations:
- effect: NoSchedule
  key: node.cloudprovider.kubernetes.io/uninitialized
  value: "true"
- effect: NoSchedule
  key: node-role.kubernetes.io/master
- effect: NoSchedule
  key: node-role.kubernetes.io/control-plane