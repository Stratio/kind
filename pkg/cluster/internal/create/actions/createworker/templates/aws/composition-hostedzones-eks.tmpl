apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xzonesconfigs
  labels:
    keos.stratio.com/cluster: "{{ .ClusterName }}"
spec:
  compositeTypeRef:
    apiVersion: configs.stratio.io/v1alpha1
    kind: xZonesConfig
  resources:
    - name: PrivateZone
      patches:
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-private-zone" 
      - fromFieldPath: spec.region
        toFieldPath: spec.forProvider.region
        type: FromCompositeFieldPath
      - fromFieldPath: spec.externalDomain
        toFieldPath: spec.forProvider.name
        type: FromCompositeFieldPath
      - fromFieldPath: spec.vpcId
        toFieldPath: spec.forProvider.vpc[0].vpcId
        type: FromCompositeFieldPath
      - fromFieldPath: status.atProvider.arn
        toFieldPath: status.hostedZones.privateZoneArn
        type: ToCompositeFieldPath
      - fromFieldPath: spec.providerConfigName
        toFieldPath: spec.providerConfigRef.name
        type: FromCompositeFieldPath
      base:
        apiVersion: route53.aws.upbound.io/v1beta1
        kind: Zone
        spec:
          forProvider:
            comment: ""
            tags:
              owner: stratio
    - name: PublicZone
      patches: 
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-public-zone" 
      - fromFieldPath: spec.region
        toFieldPath: spec.forProvider.region
        type: FromCompositeFieldPath
      - fromFieldPath: spec.externalDomain
        toFieldPath: spec.forProvider.name
        type: FromCompositeFieldPath
      - fromFieldPath: status.atProvider.arn
        toFieldPath: status.hostedZones.publicZoneArn
        type: ToCompositeFieldPath
      - fromFieldPath: spec.providerConfigName
        toFieldPath: spec.providerConfigRef.name
        type: FromCompositeFieldPath
      base:
        apiVersion: route53.aws.upbound.io/v1beta1
        kind: Zone
        spec:
          forProvider:
            comment: ""
            tags:
              owner: stratio
    - name: Role
      patches:
      - fromFieldPath: status.atProvider.arn
        toFieldPath: status.role.arn
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider.uniqueId
        toFieldPath: status.role.uniqueId
        type: ToCompositeFieldPath
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns"
      - type: CombineFromComposite
        toFieldPath: metadata.labels["id"]
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns-prerrequisite-role"
      - fromFieldPath: spec.providerConfigName
        toFieldPath: spec.providerConfigRef.name
        type: FromCompositeFieldPath
      - type: CombineFromComposite
        toFieldPath: spec.forProvider.assumeRolePolicy
        combine:
          variables:
            - fromFieldPath: spec.accountId
            - fromFieldPath: spec.region
            - fromFieldPath: spec.oidcProviderId
            - fromFieldPath: spec.region
            - fromFieldPath: spec.oidcProviderId
            - fromFieldPath: spec.region
            - fromFieldPath: spec.oidcProviderId
          strategy: string
          string:
            fmt: |
              {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Federated": "arn:aws:iam::%d:oidc-provider/oidc.eks.%s.amazonaws.com/id/%s"
                        },
                        "Action": "sts:AssumeRoleWithWebIdentity",
                        "Condition": {
                            "StringEquals": {
                                "oidc.eks.%s.amazonaws.com/id/%s:sub": "system:serviceaccount:external-dns:external-dns",
                                "oidc.eks.%s.amazonaws.com/id/%s:aud": "sts.amazonaws.com"
                            }
                        }
                    }
                ]
              }
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider: {}
    - name: RolePolicy
      patches:
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-role-policy" 
      - fromFieldPath: status.atProvider.arn
        toFieldPath: status.policy.arn
        type: ToCompositeFieldPath
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns"
      - type: CombineFromComposite
        toFieldPath: metadata.labels["id"]
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns-prerrequisite-policy"
      - fromFieldPath: spec.providerConfigName
        toFieldPath: spec.providerConfigRef.name
        type: FromCompositeFieldPath
      - type: CombineFromComposite
        toFieldPath: spec.forProvider.policy
        combine:
          variables:
            - fromFieldPath: status.hostedZones.privateZoneArn
            - fromFieldPath: status.hostedZones.publicZoneArn
          strategy: string
          string:
            fmt: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": "route53:ChangeResourceRecordSets",
                      "Resource": [
                        "%s",
                        "%s"
                       ]
                  },
                  {
                  "Effect": "Allow",
                    "Action": [
                        "route53:ListHostedZones",
                        "route53:ListResourceRecordSets",
                        "route53:ListTagsForResource"
                    ],
                    "Resource": [
                        "*"
                    ]
                  }
                ]
              }
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          forProvider: {}
    - name: RolePolicyAttachment
      patches:
      - type: CombineFromComposite
        toFieldPath: metadata.name
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-role-policy-attachment" 
      - fromFieldPath: status.atProvider.id
        toFieldPath: status.rolePolicyAttachment.id
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider.policyArn
        toFieldPath: status.rolePolicyAttachment.policyArn
        type: ToCompositeFieldPath
      - fromFieldPath: status.atProvider.role
        toFieldPath: status.rolePolicyAttachment.role
        type: ToCompositeFieldPath
      - type: CombineFromComposite
        toFieldPath: spec.forProvider.policyArnSelector.matchLabels.id
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns-prerrequisite-policy"
      - type: CombineFromComposite
        toFieldPath: spec.forProvider.roleSelector.matchLabels.id
        combine:
          variables:
          - fromFieldPath: spec.clusterName
          strategy: string
          string:
            fmt: "%s-external-dns-prerrequisite-role"
      - fromFieldPath: spec.providerConfigName
        toFieldPath: spec.providerConfigRef.name
        type: FromCompositeFieldPath
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider: {}
   