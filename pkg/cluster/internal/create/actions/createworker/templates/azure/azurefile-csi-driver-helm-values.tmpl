cloud: AzurePublicCloud
controller:
  affinity: {}
  allowEmptyCloudConfig: true
  annotations: {}
  attachRequired: false
  cloudConfigSecretName: azure-cloud-provider
  cloudConfigSecretNamespace: kube-system
  hostNetwork: true
  kubeconfig: ""
  labels: {}
  livenessProbe:
    healthPort: 29612
  logLevel: 5
  metricsPort: 29614
  name: csi-azurefile-controller
  nodeSelector: {}
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir,azure-cred
  podLabels: {}
  replicas: 2
  resources:
    azurefile:
      limits:
        cpu: 1
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiAttacher:
      limits:
        cpu: 1
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiProvisioner:
      limits:
        cpu: 1
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiResizer:
      limits:
        cpu: 1
        memory: 500Mi
      requests:
        cpu: 10m
        memory: 20Mi
    csiSnapshotter:
      limits:
        cpu: 1
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    livenessProbe:
      limits:
        cpu: 1
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
  runOnControlPlane: false
  runOnMaster: false
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/controlplane
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    operator: Exists
customLabels: {}
driver:
  azureGoSDKLogLevel: ""
  customUserAgent: ""
  httpProxy: ""
  httpsProxy: ""
  name: file.csi.azure.com
  userAgentSuffix: OSS-helm
feature:
  enableGetVolumeStats: true
  enableVolumeMountGroup: true
  fsGroupPolicy: ReadWriteOnceWithFSType
image:
  azurefile:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/azurefile-csi
    tag: v1.28.3
  baseRepo: {{ if $.Private }}{{ $.KeosRegUrl }}{{ else }}mcr.microsoft.com{{ end }}
  csiAttacher:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/csi-attacher
    tag: v4.3.0
  csiProvisioner:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/csi-provisioner
    tag: v3.5.0
  csiResizer:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/csi-resizer
    tag: v1.8.0
  livenessProbe:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/livenessprobe
    tag: v2.10.0
  nodeDriverRegistrar:
    pullPolicy: IfNotPresent
    repository: /oss/kubernetes-csi/csi-node-driver-registrar
    tag: v2.8.0
imagePullSecrets: []
linux:
  affinity: {}
  annotations: {}
  distro: debian
  dnsPolicy: Default
  dsName: csi-azurefile-node
  enableRegistrationProbe: true
  enabled: true
  kubeconfig: ""
  kubelet: /var/lib/kubelet
  labels: {}
  mountPermissions: 511
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: type
          operator: NotIn
          values:
          - virtual-kubelet
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  resources:
    azurefile:
      limits:
        memory: 400Mi
      requests:
        cpu: 10m
        memory: 20Mi
    livenessProbe:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
    nodeDriverRegistrar:
      limits:
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
  tolerations:
  - operator: Exists
node:
  allowEmptyCloudConfig: true
  allowInlineVolumeKeyAccessWithIdentity: false
  cloudConfigSecretName: azure-cloud-provider
  cloudConfigSecretNamespace: kube-system
  livenessProbe:
    healthPort: 29613
  logLevel: 5
rbac:
  create: true
  name: azurefile
serviceAccount:
  controller: csi-azurefile-controller-sa
  create: true
  node: csi-azurefile-node-sa
  snapshotController: csi-snapshot-controller-sa
snapshot:
  enabled: false
  image:
    csiSnapshotController:
      pullPolicy: IfNotPresent
      repository: /oss/kubernetes-csi/snapshot-controller
      tag: v6.2.1
    csiSnapshotter:
      pullPolicy: IfNotPresent
      repository: /oss/kubernetes-csi/csi-snapshotter
      tag: v6.2.1
  snapshotController:
    annotations: {}
    labels: {}
    name: csi-snapshot-controller
    podAnnotations: {}
    podLabels: {}
    replicas: 2
    resources:
      limits:
        cpu: 1
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 20Mi
windows:
  affinity: {}
  annotations: {}
  dsName: csi-azurefile-node-win
  enableRegistrationProbe: true
  enabled: true
  kubeconfig: ""
  kubelet: C:\\var\\lib\\kubelet
  labels: {}
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: type
          operator: NotIn
          values:
          - virtual-kubelet
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  resources:
    azurefile:
      limits:
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 40Mi
    livenessProbe:
      limits:
        memory: 150Mi
      requests:
        cpu: 10m
        memory: 40Mi
    nodeDriverRegistrar:
      limits:
        memory: 150Mi
      requests:
        cpu: 30m
        memory: 40Mi
  tolerations:
  - effect: NoSchedule
    key: node.kubernetes.io/os
    operator: Exists
  useHostProcessContainers: false
workloadIdentity:
  clientID: ""
  tenantID: ""